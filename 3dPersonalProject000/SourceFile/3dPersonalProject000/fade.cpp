#include "fade.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CFade::CFade(int nPriority) :CScene2D(nPriority)
{
	m_pVtxBuff = NULL;
	m_modeNext = CManager::MODE_TITLE;
	m_color = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
	m_fade = FADE_IN;
}

//=============================================================================
// デストラクタ
//=============================================================================
CFade::~CFade()
{
}

//=============================================================================
// 生成処理
//=============================================================================
CFade* CFade::Create(void)
{
	// CFadeのポインタ
	CFade* pFade = NULL;

	// メモリの確保
	pFade = new CFade;

	// pFadeがNULLじゃないとき
	if (pFade != NULL)
	{
		// 初期化処理
		pFade->Init();
	}

	// pFadeを返す
	return pFade;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CFade::Init(void)
{
	SetPosition(D3DXVECTOR3((SCREEN_WIDTH / 2), (SCREEN_HEIGHT / 2), 0.0f));
	SetSize(D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f));
	SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f));
	SetObjType(CScene::OBJTYPE_FADE);
	CScene2D::Init();
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CFade::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CFade::Update(void)
{
	if (m_fade != FADE_NONE)
	{
		if (m_fade == FADE_IN)
		{
			FadeIn();
		}
		else if (m_fade == FADE_OUT)
		{
			FadeOut();
		}
	}

	SetColor(m_color);

	CScene2D::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CFade::Draw(void)
{
	CScene2D::Draw();
}

//=============================================================================
// フェードイン処理
//=============================================================================
void CFade::FadeIn(void)
{
	if (m_fade != FADE_NONE)
	{//フェードイン処理
		if (m_fade == FADE_IN)
		{//フェードイン処理
			m_color.a -= FADE_RATE;
			//α値を減算して後ろの画面を浮き上がらせる
			if (m_color.a <= 0.0f)
			{
				//フェード処理終了
				m_color.a = 0.0f;
				m_fade = FADE_NONE;
			}
		}
	}
}

//=============================================================================
// フェードアウト処理
//=============================================================================
void CFade::FadeOut(void)
{
	if (m_fade != FADE_NONE)
	{
		if (m_fade == FADE_OUT)
		{//フェードアウト処理
			m_color.a += FADE_RATE;
			//α値を減算して後ろの画面を消していく
			if (m_color.a >= 1.0f)
			{
				//フェードイン処理に切り替え
				m_fade = FADE_IN;
				m_color.a = 1.0f;
				//モード設定
				CManager::SetMode(m_modeNext);
			}
		}
	}
}

//=============================================================================
// セット
//=============================================================================
void CFade::SetFade(CManager::MODE mode)
{
	m_fade = FADE_OUT;
	m_modeNext = mode;
}
